#!/bin/bash

NUKE_LEVEL=0

while (( "$#" )); do
  case "$1" in
    -f)
      NUKE_LEVEL=$(($NUKE_LEVEL + 1))
      ;;
    -ff)
      NUKE_LEVEL=$(($NUKE_LEVEL + 2))
      ;;
    -fff)
      NUKE_LEVEL=$(($NUKE_LEVEL + 3))
      ;;
    -fff*)
      NUKE_LEVEL=$(($NUKE_LEVEL + 4))
      ;;
  esac

  shift
done

if [[ $NUKE_LEVEL == 0 ]]; then
  echo "‚ò†Ô∏è  Run with \"-f\" to indicate desired level of nuking:"
  echo
  echo "  -f: truncate database"
  echo "  -ff: truncate database, kill caches"
  echo "  -fff: truncate database, kill caches, \"git clean\" (most)"
  echo "  -ffff: truncate database, kill caches, \"git clean\" (everything)"
  echo
fi

if [[ $PWD = $HOME/code/portal-master* ]]; then
  BASE=$HOME/code/portal-master
  FULL=$BASE/liferay-portal
elif [[ $PWD = $HOME/code/portal-ee* ]]; then
  BASE=$HOME/code/portal-ee
  FULL=$BASE/liferay-portal-ee
else
  BASE=$HOME/code/portal
  FULL=$BASE/liferay-portal
fi

if [[ $NUKE_LEVEL > 0 ]]; then
  # Target "lportal_master" (corresponds to main
  # portal/liferay-portal checkout) by default, except when in
  # the portal-master/liferay-portal checkout (in which case use
  # "lportal2_master").
  [[ $BASE = $HOME/code/portal-master ]] && DB=lportal2_master || DB=lportal_master

  echo "‚ò†Ô∏è  Deleting db ($DB)..."

  echo "set foreign_key_checks=1;" | (echo "select concat('drop table if exists ', table_name, ';') from information_schema.tables where table_schema='$DB';" | mysql -u root -B | tail -n +2 && cat;) | (echo "set foreign_key_checks=0;" && cat;) | mysql -u root "$DB"
fi

TARGET="~${BASE#$HOME}"

if [[ $NUKE_LEVEL > 1 ]]; then
  echo "üí• Cleaning up temporary files in $TARGET..."

  rm -rf "$BASE/bundles/osgi/state" \
         "$BASE/bundles/data" \
         "$BASE/bundles/tomcat-9.0.17/work"
fi

if [[ $NUKE_LEVEL > 2 ]]; then
  echo "‚ò¢Ô∏è  \"git clean\"-ing $TARGET..."

  (cd "$FULL" && git clean -fdx -e 'build.*.properties' -e 'app.server.*.properties')
fi

if [[ $NUKE_LEVEL > 3 ]]; then
  echo "‚ò¢Ô∏è  \"git clean\"-ing $TARGET..."

  (cd "$FULL" && git clean -fdx)

  if [ $BASE = $HOME/code/portal ]; then
    echo
    read -p "Do you want to run \`portool setup\` to restore properties files? " -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
      portool setup
    fi
  fi
fi
